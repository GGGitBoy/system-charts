apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    app: {{ .Chart.Name }}
    chart: {{ template "app.version" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ .Release.Name }}
spec:
{{- if .Values.securityContext }}
  securityContext:
{{ toYaml .Values.securityContext | indent 4 }}
{{- end }}
  containers:
  - name: prometheus-proxy
    command:
    - /bin/sh
    - -c 
    - cp /nginx/run-sh.tmpl /var/cache/nginx/nginx-start.sh; chmod +x /var/cache/nginx/nginx-start.sh; /var/cache/nginx/nginx-start.sh
    env:
    - name: POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    image: {{ .Values.image.proxy.repository }}:{{ .Values.image.proxy.tag }}
    ports:
    - containerPort: 8080
      name: nginx-http
      protocol: TCP
    {{- if and .Values.resources .Values.resources.proxy }}
    resources:
{{ toYaml .Values.resources.proxy | indent 6 }}
    {{- end }}
    securityContext:
      runAsUser: 101
      runAsGroup: 101
    volumeMounts:
    - mountPath: /nginx
      name: configmap-{{ template "app.nginx.fullname" . }}
    - mountPath: /var/cache/nginx
      name: nginx-home
  podMetadata:
    creationTimestamp: {{ now | date "2006-01-02T15:04:05Z" | quote }}
    labels:
      app: {{ .Chart.Name }}
      chart: {{ template "app.version" . }}
      release: {{ .Release.Name }}
  image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
{{- if or (.Values.externalLabels) (eq .Values.level "project") }}
  externalLabels:
{{- if and (eq .Values.level "project") }}
    prometheus_from: {{ .Values.global.clusterName }}
{{- end }}
{{- range $key, $value := .Values.externalLabels}}
    {{ $key }}: {{ $value | quote }}
{{- end }}
{{- end }}
  nodeSelector:
{{- include "linux-node-selector" . | nindent 4 }}
    {{- range .Values.nodeSelectors }}
    {{- $pair := regexSplit "=" . 2 }}
    {{- if eq 2 (len $pair) }}
    {{ (index $pair 0) }}: {{ (index $pair 1) }}
    {{- else }}
    {{ (index $pair 0) }}: ""
    {{- end }}
    {{- end }}
  paused: {{ .Values.paused }}
  replicas: {{ .Values.replicaCount }}
  logLevel:  {{ .Values.logLevel }}
  logFormat: {{ .Values.logFormat }}
  scrapeInterval: {{ .Values.scrapeInterval }}
  evaluationInterval: {{ .Values.evaluationInterval }}
{{- if and .Values.resources .Values.resources.core }}
  resources:
{{ toYaml .Values.resources.core | indent 4 }}
{{- end }}
  retention: "{{ .Values.retention }}"
  configMaps:
  - {{ template "app.nginx.fullname" . }}
{{- if .Values.secrets }}
  secrets:
{{ toYaml .Values.secrets | indent 2 }}
{{- end }}
{{- if .Values.enabledRBAC }}
  serviceAccountName: {{ default (default (include "app.fullname" .) .Values.serviceAccountName) .Values.serviceAccountNameOverride }}
{{- end }}
{{ include "serviceMonitor.namespace.selector" . | indent 2 }}
{{- if or (.Values.serviceMonitorSelector) (eq .Values.level "project") }}
  serviceMonitorSelector:
{{ toYaml .Values.serviceMonitorSelector | indent 4 }}
{{- end }}
{{- if .Values.remoteRead }}
  remoteRead:
{{ toYaml .Values.remoteRead | indent 4 }}
{{- end }}
{{- if .Values.remoteWrite }}
  remoteWrite:
{{ toYaml .Values.remoteWrite | indent 4 }}
{{- end }}
{{- if or .Values.storageSpec .Values.persistence.enabled }}
  storage:
    disableMountSubPath: {{ .Values.disableMountSubPath }}
    volumeClaimTemplate:
      metadata:
        creationTimestamp: {{ now | date "2006-01-02T15:04:05Z" | quote }}
      {{- if .Values.persistence.name }}
        name: {{ .Values.persistence.name }}
      {{- end }}
      spec:
{{- if .Values.storageSpec }}
{{ toYaml .Values.storageSpec | indent 8 }}
{{- else }}
        {{ if and .Values.persistence.storageClass (ne "default" .Values.persistence.storageClass) }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{ end }}
        dataSource:
          kind: ""
          name: ""
          apiGroup: ""
        accessModes: 
          - {{ default "ReadWriteOnce" .Values.persistence.accessMode }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
{{- end }}
{{- end }}
  volumes:
  - name: nginx-home
    emptyDir: {}
  version: "{{ .Values.image.tag }}"
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              app: {{ .Chart.Name }}
              prometheus: {{ .Release.Name }}
  tolerations:
{{- include "linux-node-tolerations" . | nindent 4}}
{{- if .Values.tolerations }}
{{ toYaml .Values.tolerations | indent 4 }}
{{- end }}


